#import "../../fragments.gql"

query areProductsLoaded {
  productsLoaded @client
}

query getCollectionProducts {
  collectionProducts @client {
    ...CollectionProductData
  }
}

query _getCollectionProducts {
  _collectionProducts @client {
    ...CollectionProductData
  }
}

query getProducts {
  collectionProducts @cilent
}

query getActiveSort {
  activeSort @cilent
}

query productData {
  cursor @client
  productsLoaded @client
  collectionProducts @client {
    ...CollectionProductData
  }
}

query fetchProducts ($step: Int!, $handle: String!, $cursor: String) {
  collectionByHandle (handle: $handle) {
    products (first: $step, after: $cursor ) {
      pageInfo {
        hasNextPage
        hasPreviousPage
      }
      edges {
        cursor
        product: node {
          ...ProductInfo
        }
      }
    }
  }
}

fragment CollectionProductData on CollectionProduct {
  id
  handle
  title
  tags
  prices {
    min {
      value
      string
    }
    range
  }
  options {
    group
    value
  }
  featuredImage {
    alt
    lqip
    src
    srcset
  }
  images {
    alt
    lqip
    src
    srcset
  }
}
